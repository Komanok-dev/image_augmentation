services:
  app:
    build: .
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
    working_dir: /app
    command: >
      /bin/bash -c "
      alembic upgrade head &&
      uvicorn main:app --host 0.0.0.0 --port 8000 --reload"

  db:
    image: postgres:16.2
    container_name: ${DATABASE_HOSTNAME}
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    ports:
      - "${CELERY_PORT}:${CELERY_PORT}"
    command: ["redis-server", "--timeout", "0"]
    restart: always

  celery_worker:
    build: .
    command: celery -A app.celery worker --loglevel=info
    environment:
      - CELERY_BROKER_URL=${CELERY_DRIVER}://${CELERY_HOST}:${CELERY_PORT}/${CELERY_NAME}
    depends_on:
      - redis
      - db

  minio:
    image: minio/minio
    container_name: minio-server
    ports:
      - "${MINIO_PORT_API}:${MINIO_PORT_API}"
      - "${MINIO_PORT_CONSOLE}:${MINIO_PORT_CONSOLE}"
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ROOT_USER}
      MINIO_SECRET_KEY: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":${MINIO_PORT_CONSOLE}"
    volumes:
      - minio_data:/data

  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - "${GF_PORT}:${GF_PORT}"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_PASSWORD}
      - GF_LOG_LEVEL=error
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - db

volumes:
  db_data:
  minio_data:
  grafana_data:
